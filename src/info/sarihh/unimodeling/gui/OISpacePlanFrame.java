package info.sarihh.unimodeling.gui;

import info.sarihh.unimodeling.utility.GraphicsUtilities;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.SpinnerNumberModel;

/**
 * This class creates the internal frame for the modeling of OI-spaces.
 * Author: Sari Haj Hussein
 */
public class OISpacePlanFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form OISpaceModelingFrame
     */
    public OISpacePlanFrame(UniModelingGUI uniModelingGUI, File planFile) {
        this.unModeingGUI = uniModelingGUI;
        initComponents();
        displayPlan(planFile);
        setTitle(getTitle() + " - " + planFile.getName());
    }

    /** This method displays the specified OI-space plan in a JLabel on this
     * internal frame. */
    private void displayPlan(File planFile) {
        try {
            planImage = ImageIO.read(planFile);
            oispacePlanLabel.setIcon(new ImageIcon(planImage));
        } catch (IOException ioe) {
            Logger.getLogger(OISpacePlanFrame.class.getName()).log(Level.SEVERE, null, ioe);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonPanel = new javax.swing.JPanel();
        applyToLabel = new javax.swing.JLabel();
        applyToComboBox = new javax.swing.JComboBox();
        percentageLabel = new javax.swing.JLabel();
        percentageSpinner = new javax.swing.JSpinner();
        fitButton = new javax.swing.JButton();
        containerScrollPane = new javax.swing.JScrollPane();
        containerPanel = new javax.swing.JPanel();
        oispacePlanLabel = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("info/sarihh/unimodeling/gui/OISpacePlanFrame"); // NOI18N
        setTitle(bundle.getString("OISpacePlanFrame.title")); // NOI18N

        buttonPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        applyToLabel.setText(bundle.getString("OISpacePlanFrame.applyToLabel.text")); // NOI18N
        buttonPanel.add(applyToLabel);

        applyToComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Width only", "Height only", "Width and height" }));
        applyToComboBox.setSelectedIndex(2);
        buttonPanel.add(applyToComboBox);

        percentageLabel.setText(bundle.getString("OISpacePlanFrame.percentageLabel.text")); // NOI18N
        buttonPanel.add(percentageLabel);

        percentageSpinner.setModel(new SpinnerNumberModel(100, 1, 5000, 1));
        percentageSpinner.setEditor(new javax.swing.JSpinner.NumberEditor(percentageSpinner, "#"));
        percentageSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                percentageSpinnerStateChanged(evt);
            }
        });
        buttonPanel.add(percentageSpinner);

        fitButton.setText(bundle.getString("OISpacePlanFrame.fitButton.text")); // NOI18N
        fitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fitButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(fitButton);

        getContentPane().add(buttonPanel, java.awt.BorderLayout.NORTH);

        containerPanel.setLayout(new java.awt.BorderLayout());

        oispacePlanLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        containerPanel.add(oispacePlanLabel, java.awt.BorderLayout.CENTER);

        containerScrollPane.setViewportView(containerPanel);

        getContentPane().add(containerScrollPane, java.awt.BorderLayout.CENTER);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-512)/2, (screenSize.height-314)/2, 512, 314);
    }// </editor-fold>//GEN-END:initComponents

private void percentageSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_percentageSpinnerStateChanged
    int resizePercentage = (int) percentageSpinner.getValue();
    String applyTo = (String) applyToComboBox.getSelectedItem();
    BufferedImage resizedPlanImage = null;
    switch (applyTo) {
        case "Width only":
            resizedPlanImage = GraphicsUtilities.getScaledInstance(planImage,
                    planImage.getWidth() * resizePercentage / 100,
                    ((ImageIcon) oispacePlanLabel.getIcon()).getIconHeight(),
                    RenderingHints.VALUE_INTERPOLATION_NEAREST_NEIGHBOR, false);
            break;
        case "Height only":
            resizedPlanImage = GraphicsUtilities.getScaledInstance(planImage,
                    ((ImageIcon) oispacePlanLabel.getIcon()).getIconWidth(),
                    planImage.getHeight() * resizePercentage / 100,
                    RenderingHints.VALUE_INTERPOLATION_NEAREST_NEIGHBOR, false);
            break;
        case "Width and height":
            resizedPlanImage = GraphicsUtilities.getScaledInstance(planImage,
                    planImage.getWidth() * resizePercentage / 100,
                    planImage.getHeight() * resizePercentage / 100,
                    RenderingHints.VALUE_INTERPOLATION_NEAREST_NEIGHBOR, false);
            break;
        default:
            resizedPlanImage = GraphicsUtilities.getScaledInstance(planImage,
                    planImage.getWidth() * resizePercentage / 100,
                    planImage.getHeight() * resizePercentage / 100,
                    RenderingHints.VALUE_INTERPOLATION_NEAREST_NEIGHBOR, false);
            break;
    }
    oispacePlanLabel.setIcon(new ImageIcon(resizedPlanImage));
}//GEN-LAST:event_percentageSpinnerStateChanged

private void fitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fitButtonActionPerformed
    BufferedImage resizedPlanImage = GraphicsUtilities.getScaledInstance(planImage,
            containerScrollPane.getWidth() - 10,
            containerScrollPane.getHeight() - 10,
            RenderingHints.VALUE_INTERPOLATION_BICUBIC, true);
    oispacePlanLabel.setIcon(new ImageIcon(resizedPlanImage));
}//GEN-LAST:event_fitButtonActionPerformed
    private UniModelingGUI unModeingGUI = null;
    private BufferedImage planImage = null;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox applyToComboBox;
    private javax.swing.JLabel applyToLabel;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JPanel containerPanel;
    private javax.swing.JScrollPane containerScrollPane;
    private javax.swing.JButton fitButton;
    private javax.swing.JLabel oispacePlanLabel;
    private javax.swing.JLabel percentageLabel;
    private javax.swing.JSpinner percentageSpinner;
    // End of variables declaration//GEN-END:variables
}
